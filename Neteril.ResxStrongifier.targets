<Project>
    <UsingTask TaskName="NetFx.StringResources" AssemblyFile="$(MSBuildThisFileDirectory)ResxStrongifier.dll" />

    <PropertyGroup>
        <GenerateStringResources Condition=" '$(GenerateStringResources)' == '' ">true</GenerateStringResources>
        <GeneratedStringResourcesPrefix Condition=" '$(GeneratedStringResourcesPrefix)' == '' ">generated-resx/</GeneratedStringResourcesPrefix>
    </PropertyGroup>

    <!-- VSMac does not excecute targets marked with 'BeforeTargets="CoreCompile"' when doing a design time build -->
    <!-- If we want our stuff to show up in intellisense we need to use the 'old' mechanism of inserting into     -->
    <!-- the CoreCompileDependsOn list. This should mean we are compatible with VS, VSMac and sdk style projects  -->
    <PropertyGroup>
        <CoreCompileDependsOn>$(CoreCompileDependsOn);_IncludeStrongifiedSource</CoreCompileDependsOn>
    </PropertyGroup>

    <Target Name="_IncludeStrongifiedSource"
        DependsOnTargets="StrongifyResx"
        BeforeTargets="CoreCompile"
        Condition=" '$(GenerateStringResources)' == 'true' ">
        <ItemGroup>
            <FileWrites Include="@(ResxCode->'%(GeneratedOutput)')" />
            <Compile Include="@(ResxCode->'%(GeneratedOutput)')" />
        </ItemGroup>
    </Target>

    <Target Name="_IncludeStrongifiedSourceInXamlBuild"
        DependsOnTargets="StrongifyResx"
        BeforeTargets="GenerateTemporaryTargetAssembly"
        Condition=" '$(GenerateStringResources)' == 'true' ">
        <ItemGroup>
            <_GeneratedCodeFiles Include="@(ResxCode->'%(GeneratedOutput)')" />
        </ItemGroup>
    </Target>

    <!-- Compatibility targets with netfx-StringResources -->
    <Target Name="GenerateStringResources" DependsOnTargets="StrongifyResx" Condition=" '$(GenerateStringResources)' == 'true' " />

    <Target Name="StrongifyResx"
        DependsOnTargets="_CollectResxCode;_GenerateStringResourcesFiles" Condition=" '$(GenerateStringResources)' == 'true' " />

    <Target Name="_CollectResxCode">
        <ItemGroup>
            <ResxCode Include="@(EmbeddedResource)" Condition=" %(EmbeddedResource.Generator) == 'ResXFileCodeGenerator' Or %(EmbeddedResource.Generator) == 'PublicResXFileCodeGenerator' ">
                <GeneratedOutput>$(GeneratedStringResourcesPrefix)%(RelativeDir)%(Filename).Strings$(DefaultLanguageSourceExtension)</GeneratedOutput>
                <CanonicalRelativeDir>$([MSBuild]::ValueOrDefault('%(EmbeddedResource.RelativeDir)', '').TrimEnd('\'))</CanonicalRelativeDir>
                <Public Condition=" %(EmbeddedResource.Generator) == 'PublicResXFileCodeGenerator' ">true</Public>
            </ResxCode>
        </ItemGroup>
    </Target>

    <Target Name="_GenerateStringResourcesFiles"
        Inputs="@(ResxCode);$(MSBuildThisFileFullPath);$(MSBuildProjectFullPath)"
        Outputs="@(ResxCode->'%(GeneratedOutput)')">

        <StringResources
            RootNamespace="$(RootNamespace)"
            Language="$(Language)"
            ResxFiles="@(ResxCode)" />
    </Target>
</Project>
